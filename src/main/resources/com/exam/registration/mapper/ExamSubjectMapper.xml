<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.registration.mapper.ExamSubjectMapper">
  <resultMap id="BaseResultMap" type="com.exam.registration.model.ExamSubject">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="subject_id" jdbcType="BIGINT" property="subjectId" />
    <result column="exam_id" jdbcType="BIGINT" property="examId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, start_time, end_time, address, subject_id, exam_id, create_time, update_time, 
    is_deleted
  </sql>
  <select id="countExamSubjects" resultType="java.lang.Long">
    select count(*) from exam_subject
  </select>

  <select id="listExamSubjects" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam_subject
    where is_deleted = 0
  </select>
  <select id="getExamSubjectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam_subject
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteExamSubjectByPrimaryKey" parameterType="java.lang.Long">
    delete from exam_subject
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertExamSubject" parameterType="com.exam.registration.model.ExamSubject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam_subject (start_time, end_time, address, 
      subject_id, exam_id, create_time, 
      update_time, is_deleted)
    values (#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{address,jdbcType=VARCHAR}, 
      #{subjectId,jdbcType=BIGINT}, #{examId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT})
  </insert>
  <insert id="insertExamSubjectSelective" parameterType="com.exam.registration.model.ExamSubject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam_subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateExamSubjectByPrimaryKeySelective" parameterType="com.exam.registration.model.ExamSubject">
    update exam_subject
    <set>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=BIGINT},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateExamSubjectByPrimaryKey" parameterType="com.exam.registration.model.ExamSubject">
    update exam_subject
    set start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=BIGINT},
      exam_id = #{examId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>