<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.registration.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.exam.registration.model.Exam">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="major_id" jdbcType="BIGINT" property="majorId" />
    <result column="site_id" jdbcType="BIGINT" property="siteId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="start_examinee_number" jdbcType="CHAR" property="startExamineeNumber" />
    <result column="current_examinee_number" jdbcType="CHAR" property="currentExamineeNumber" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, major_id, site_id, start_time, end_time, `start_examinee_number`,
    current_examinee_number, note, create_time, update_time, is_deleted
  </sql>
  <select id="countExams" parameterType="java.util.Map" resultType="java.lang.Long">
    select count(*) from exam
    <where>
      <if test="siteId != null and siteId != ''">
        site_Id = #{siteId,jdbcType=BIGINT}
      </if>
      <if test="majorId != null and majorId != ''">
        and major_Id = #{majorId,jdbcType=BIGINT}
      </if>
      <if test="keyword != null and keyword != ''">
        and `name` = #{keyword,jdbcType=VARCHAR}
        or
        id = #{keyword,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="listExams" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam
    where is_deleted = 0
  </select>
  <select id="listExamsByMajorId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam
    where major_Id = #{majorId,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <select id="listExamsBySiteId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam
    where site_id = #{siteId,jdbcType=BIGINT}
    and is_deleted = 0
  </select>
  <select id="listExamsByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam
    <where>
      <if test="siteId != null and siteId != ''">
        site_Id = #{siteId,jdbcType=BIGINT}
      </if>
      <if test="majorId != null and majorId != ''">
        and major_Id = #{majorId,jdbcType=BIGINT}
      </if>
      <if test="keyword != null and keyword != ''">
        and `name` = #{keyword,jdbcType=VARCHAR}
        or
        id = #{keyword,jdbcType=BIGINT}
      </if>
    </where>
    limit #{currentIndex}, #{pageSize}
  </select>
  <select id="getExamByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteExamByPrimaryKey" parameterType="java.lang.Long">
    delete from exam
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteExamByPrimaryKeys" parameterType="java.lang.String">
    delete from exam
    where id in (${ids})
  </delete>
  <insert id="insertExam" parameterType="com.exam.registration.model.Exam">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam (`name`, major_id, site_id, start_time,
      end_time,`start_examinee_number`, current_examinee_number, note,
      create_time, update_time, is_deleted
      )
    values (#{name,jdbcType=VARCHAR}, #{majorId,jdbcType=BIGINT}, #{siteId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP},#{startExamineeNumber,jdbcType=CHAR}, #{currentExamineeNumber,jdbcType=CHAR}, #{note,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertExamSelective" parameterType="com.exam.registration.model.Exam">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="startExamineeNumber != null">
        `start_examinee_number`,
      </if>
      <if test="currentExamineeNumber != null">
        current_examinee_number,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=BIGINT},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startExamineeNumber != null">
        #{startExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="currentExamineeNumber != null">
        #{currentExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateExamByPrimaryKeySelective" parameterType="com.exam.registration.model.Exam">
    update exam
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null">
        major_id = #{majorId,jdbcType=BIGINT},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startExamineeNumber != null">
        `start_examinee_number` = #{startExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="currentExamineeNumber != null">
        current_examinee_number = #{currentExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateExamByPrimaryKey" parameterType="com.exam.registration.model.Exam">
    update exam
    set `name` = #{name,jdbcType=VARCHAR},
      major_id = #{majorId,jdbcType=BIGINT},
      site_id = #{siteId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      `start_examinee_number` = #{startExamineeNumber,jdbcType=CHAR},
      current_examinee_number = #{currentExamineeNumber,jdbcType=CHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>