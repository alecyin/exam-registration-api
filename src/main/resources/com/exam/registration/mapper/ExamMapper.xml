<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.registration.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.exam.registration.model.Exam">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="major_id" jdbcType="BIGINT" property="majorId" />
    <result column="site_id" jdbcType="BIGINT" property="siteId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="conflict" jdbcType="VARCHAR" property="conflict" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="start_ examinee_number" jdbcType="CHAR" property="startExamineeNumber" />
    <result column="current_examinee_number" jdbcType="CHAR" property="currentExamineeNumber" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, major_id, site_id, start_time, end_time, conflict, province, `start_ examinee_number`, 
    current_examinee_number, note, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.exam.registration.model.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exam
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.exam.registration.model.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.exam.registration.model.Exam">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam (major_id, site_id, start_time, 
      end_time, conflict, province, 
      `start_ examinee_number`, current_examinee_number, note, 
      create_time, update_time)
    values (#{majorId,jdbcType=BIGINT}, #{siteId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{conflict,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{startExamineeNumber,jdbcType=CHAR}, #{currentExamineeNumber,jdbcType=CHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.exam.registration.model.Exam">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="majorId != null">
        major_id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="conflict != null">
        conflict,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="startExamineeNumber != null">
        `start_ examinee_number`,
      </if>
      <if test="currentExamineeNumber != null">
        current_examinee_number,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="majorId != null">
        #{majorId,jdbcType=BIGINT},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conflict != null">
        #{conflict,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="startExamineeNumber != null">
        #{startExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="currentExamineeNumber != null">
        #{currentExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.exam.registration.model.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.majorId != null">
        major_id = #{record.majorId,jdbcType=BIGINT},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.conflict != null">
        conflict = #{record.conflict,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.startExamineeNumber != null">
        `start_ examinee_number` = #{record.startExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="record.currentExamineeNumber != null">
        current_examinee_number = #{record.currentExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set id = #{record.id,jdbcType=BIGINT},
      major_id = #{record.majorId,jdbcType=BIGINT},
      site_id = #{record.siteId,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      conflict = #{record.conflict,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      `start_ examinee_number` = #{record.startExamineeNumber,jdbcType=CHAR},
      current_examinee_number = #{record.currentExamineeNumber,jdbcType=CHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.exam.registration.model.Exam">
    update exam
    <set>
      <if test="majorId != null">
        major_id = #{majorId,jdbcType=BIGINT},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conflict != null">
        conflict = #{conflict,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="startExamineeNumber != null">
        `start_ examinee_number` = #{startExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="currentExamineeNumber != null">
        current_examinee_number = #{currentExamineeNumber,jdbcType=CHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exam.registration.model.Exam">
    update exam
    set major_id = #{majorId,jdbcType=BIGINT},
      site_id = #{siteId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      conflict = #{conflict,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      `start_ examinee_number` = #{startExamineeNumber,jdbcType=CHAR},
      current_examinee_number = #{currentExamineeNumber,jdbcType=CHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>